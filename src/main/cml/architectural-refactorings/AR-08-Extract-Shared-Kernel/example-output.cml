/* This is an example output file for the 'Extract Shared Kernel' refactoring and shows a small part of the insurance example. */
ContextMap InsuranceContextMap {
	type = SYSTEM_LANDSCAPE
	state = TO_BE
	
	contains PolicyManagementContext
	contains DebtCollection
	contains PolicyManagementContext_DebtCollection_SharedKernel

	/* New relationships generated by the 'Extract Shared Kernel' AR: */
	
	PolicyManagementContext_DebtCollection_SharedKernel [ U ] -> [ D ] PolicyManagementContext

	PolicyManagementContext_DebtCollection_SharedKernel [ U ] -> [ D ] DebtCollection

}

BoundedContext PolicyManagementContext implements PolicyManagementDomain {
	domainVisionStatement = "This bounded context manages the contracts and policies of the customers."
	responsibilities = "Offers, Contracts, Policies"
	implementationTechnology = "Java, Spring App"
	
	Aggregate Offers {
		Entity Offer {
			aggregateRoot
			int offerId
			Customer client
			- List<Product> products
			BigDecimal price
		}
	}
	Aggregate Products {
		Entity Product {
			aggregateRoot
			- ProductId identifier
			String productName
		}
		ValueObject ProductId {
			int productId key
		}
	}
	Aggregate Contract {
		Entity Contract {
			aggregateRoot
			- ContractId identifier
			Customer client
			- List<Product> products
		}
		ValueObject ContractId {
			int contractId key
		}
		
		Entity Policy {
			int policyNr
			- Contract contract
			BigDecimal price
		}
	}
}

BoundedContext DebtCollection implements DebtsDomain {
	domainVisionStatement = "The debt collection context is responsible for the financial income of the insurance company (the debts) which depend on the corresponding contracts and policies."
	responsibilities = "Debts, Dunning"
	implementationTechnology = "JEE"
	
	Aggregate Debts {
		Entity Debt {
			aggregateRoot
			int debtNr
			- Policy policy
			Date creationDate
			Date paymentDate
			Date paymentDeadline
			BigDecimal price
			PaymentStatus status
			- List<Dunning> dunnigs
		}
		Entity Dunning {
			int dunningNr
			- Debt debt
			Date dunningDate
			Date paymentDeadline
		}
	}
}

/* New Bounded Context generated by the 'Extract Shared Kernel' AR. After applying the AR, the Bounded Context can
 * be renamed with the 'Rename Element' refactoring. The user can further specify the comment parts here after applying 
 * the AR (create new Aggregates and entities or move them from existing contexts to this one). 
 */
// Extracted Bounded Context for Shared Kernel. Please specify the kernel model here:
BoundedContext PolicyManagementContext_DebtCollection_SharedKernel {
	Aggregate SharedKernelAggregate {
		Entity SharedKernelRoot {
			aggregateRoot
		}
	}
}

/* Domain & Subdomain Definitions */
Domain InsuranceDomain {
	Subdomain PolicyManagementDomain {
		type = CORE_DOMAIN
		domainVisionStatement = "Subdomain managing contracts and policies."
	}
	Subdomain DebtsDomain {
		type = GENERIC_SUBDOMAIN
		domainVisionStatement = "Subomain including everything related to the incoming money (debts, dunning, etc.)"
	}
}

